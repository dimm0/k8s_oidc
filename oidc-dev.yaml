apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: nautilus-portal-dev
  name: nautilus-portal-dev
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: nautilus-portal-dev
    spec:
      serviceAccountName: nautilus-portal
      imagePullSecrets:
        - name: gcr-json-key
      containers:
      - name: nautilus-portal-dev
        image: us.gcr.io/prp-k8s/nautilus-portal-dev:latest
        imagePullPolicy: Always
        volumeMounts:
        - name: config-volume
          mountPath: /config
      volumes:
      - name: config-volume
        configMap:
          name: portal-config
---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: nautilus-portal-dev
  name: nautilus-portal-dev
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
  selector:
    k8s-app: nautilus-portal-dev
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nautilus-portal-dev
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: dev.nautilus.optiputer.net
    http:
      paths:
      - path: /
        backend:
          serviceName: nautilus-portal-dev
          servicePort: 80
